buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:5.0.0"
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'

group 'com.ubb.david'
version '0.0.1'
mainClassName = "com.ubb.david.PlaylistApplication"

apply plugin: "com.github.johnrengelman.shadow"


sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/ktor' }
}

task generateJks(type: JavaExec, dependsOn: 'classes') {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.ubb.david.CertificateGenerator'
}

getTasksByName("run", false).first().dependsOn('generateJks')

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"

    // Ktor
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-locations:$ktor_version"
    implementation "io.ktor:ktor-auth:$ktor_version"
    implementation "io.ktor:ktor-gson:$ktor_version"
    implementation "io.ktor:ktor-network-tls-certificates:$ktor_version"

    // Retrofit
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // Firebase auth
    implementation("com.google.firebase:firebase-admin:7.1.0")

    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
}

shadowJar {
    baseName = 'playlist-app'
    classifier = null
    version = null
}
